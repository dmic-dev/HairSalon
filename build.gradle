plugins {
    id 'org.springframework.boot' version '2.3.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.9'
//    id 'net.ltgt.apt' version '0.9'
}

mainClassName = 'mic.dermitzakis.HairSalon.Main'
group = 'mic.dermitzakis'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

javafx {
    version = "14"
    modules = [ 'javafx.controls','javafx.fxml' ]
}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
//	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
// 	implementation 'org.springframework.boot:spring-boot-starter-jooq'
//	implementation 'org.springframework.boot:spring-boot-starter-security'
//	runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc'
//	runtimeOnly 'mysql:mysql-connector-java'
//	implementation 'org.flywaydb:flyway-core'
//	implementation 'org.liquibase:liquibase-core'
//      compile 'org.mapstruct:mapstruct:1.3.0.Final'
//      apt 'org.mapstruct:mapstruct-processor:1.3.0.Final'
	compileOnly 'org.projectlombok:lombok'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
        compile group: 'com.google.guava', name: 'guava', version: '28.2-jre'
//        compile group: 'org.springframework.boot', name: 'spring-boot-starter-cache', version: '2.3.0.RELEASE'
        testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.2.2.RELEASE'
}

test {
	useJUnitPlatform()
}
